{"ast":null,"code":"import api from'./api';import{mockAuthService}from'./mock.service';// Use o mock em ambiente de desenvolvimento ou se não houver API configurada\nconst useMock=true;export const authService=useMock?mockAuthService:{async login(email,password){const response=await api.post('/auth/login',{email,password});if(response.data.token){localStorage.setItem('token',response.data.token);localStorage.setItem('user',JSON.stringify(response.data.user));}return response.data;},logout(){localStorage.removeItem('token');localStorage.removeItem('user');},getCurrentUser(){const user=localStorage.getItem('user');return user?JSON.parse(user):null;},isAuthenticated(){return!!localStorage.getItem('token');}};","map":{"version":3,"names":["api","mockAuthService","useMock","authService","login","email","password","response","post","data","token","localStorage","setItem","JSON","stringify","user","logout","removeItem","getCurrentUser","getItem","parse","isAuthenticated"],"sources":["C:/Users/carlos.assuncao/tecno_react/src/services/auth.service.js"],"sourcesContent":["import api from './api';\r\nimport { mockAuthService } from './mock.service';\r\n\r\n// Use o mock em ambiente de desenvolvimento ou se não houver API configurada\r\nconst useMock = true;\r\n\r\nexport const authService = useMock ? mockAuthService : {\r\n  async login(email, password) {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    }\r\n    return response.data;\r\n  },\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  },\r\n\r\n  getCurrentUser() {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  },\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CACvB,OAASC,eAAe,KAAQ,gBAAgB,CAEhD;AACA,KAAM,CAAAC,OAAO,CAAG,IAAI,CAEpB,MAAO,MAAM,CAAAC,WAAW,CAAGD,OAAO,CAAGD,eAAe,CAAG,CACrD,KAAM,CAAAG,KAAKA,CAACC,KAAK,CAAEC,QAAQ,CAAE,CAC3B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,IAAI,CAAC,aAAa,CAAE,CAAEH,KAAK,CAAEC,QAAS,CAAC,CAAC,CACnE,GAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAClDC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC,CAClE,CACA,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDO,MAAMA,CAAA,CAAG,CACPL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAEDC,cAAcA,CAAA,CAAG,CACf,KAAM,CAAAH,IAAI,CAAGJ,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CACzC,MAAO,CAAAJ,IAAI,CAAGF,IAAI,CAACO,KAAK,CAACL,IAAI,CAAC,CAAG,IAAI,CACvC,CAAC,CAEDM,eAAeA,CAAA,CAAG,CAChB,MAAO,CAAC,CAACV,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC,CACxC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}