{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlos.assuncao\\\\tecno_react\\\\src\\\\contexts\\\\VanContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VanContext = /*#__PURE__*/createContext();\nexport function VanProvider({\n  children\n}) {\n  _s();\n  const [vanData, setVanData] = useState({\n    selectedBank: null,\n    selectedProducts: [],\n    companyData: null,\n    letterType: null\n  });\n  const updateVanData = newData => {\n    setVanData(prev => ({\n      ...prev,\n      ...newData\n    }));\n  };\n  const resetVanData = () => {\n    setVanData({\n      selectedBank: null,\n      selectedProducts: [],\n      companyData: null,\n      letterType: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(VanContext.Provider, {\n    value: {\n      vanData,\n      updateVanData,\n      resetVanData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(VanProvider, \"/d5B7JVba+RfgbFM2FKTrFduBF8=\");\n_c = VanProvider;\nexport function useVan() {\n  _s2();\n  const context = useContext(VanContext);\n  if (!context) {\n    throw new Error('useVan must be used within a VanProvider');\n  }\n  return context;\n}\n_s2(useVan, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"VanProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","VanContext","VanProvider","children","_s","vanData","setVanData","selectedBank","selectedProducts","companyData","letterType","updateVanData","newData","prev","resetVanData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useVan","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/carlos.assuncao/tecno_react/src/contexts/VanContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst VanContext = createContext();\r\n\r\nexport function VanProvider({ children }) {\r\n  const [vanData, setVanData] = useState({\r\n    selectedBank: null,\r\n    selectedProducts: [],\r\n    companyData: null,\r\n    letterType: null,\r\n  });\r\n\r\n  const updateVanData = (newData) => {\r\n    setVanData((prev) => ({\r\n      ...prev,\r\n      ...newData,\r\n    }));\r\n  };\r\n\r\n  const resetVanData = () => {\r\n    setVanData({\r\n      selectedBank: null,\r\n      selectedProducts: [],\r\n      companyData: null,\r\n      letterType: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <VanContext.Provider value={{ vanData, updateVanData, resetVanData }}>\r\n      {children}\r\n    </VanContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useVan() {\r\n  const context = useContext(VanContext);\r\n  if (!context) {\r\n    throw new Error('useVan must be used within a VanProvider');\r\n  }\r\n  return context;\r\n} "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAElC,OAAO,SAASM,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IACrCS,YAAY,EAAE,IAAI;IAClBC,gBAAgB,EAAE,EAAE;IACpBC,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAIC,OAAO,IAAK;IACjCN,UAAU,CAAEO,IAAI,KAAM;MACpB,GAAGA,IAAI;MACP,GAAGD;IACL,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBR,UAAU,CAAC;MACTC,YAAY,EAAE,IAAI;MAClBC,gBAAgB,EAAE,EAAE;MACpBC,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE;IACd,CAAC,CAAC;EACJ,CAAC;EAED,oBACEV,OAAA,CAACC,UAAU,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,OAAO;MAAEM,aAAa;MAAEG;IAAa,CAAE;IAAAX,QAAA,EAClEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B;AAAChB,EAAA,CA7BeF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AA+B3B,OAAO,SAASoB,MAAMA,CAAA,EAAG;EAAAC,GAAA;EACvB,MAAMC,OAAO,GAAG3B,UAAU,CAACI,UAAU,CAAC;EACtC,IAAI,CAACuB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EAC7D;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,MAAM;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}