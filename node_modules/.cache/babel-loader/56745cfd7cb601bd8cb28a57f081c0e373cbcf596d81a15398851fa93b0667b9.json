{"ast":null,"code":"import api from './api';\nimport { mockBankService } from './mock.service';\n\n// Use o mock em ambiente de desenvolvimento ou se não houver API configurada\nconst useMock = true;\nexport const bankService = useMock ? mockBankService : {\n  async getBanks() {\n    const response = await api.get('/banks');\n    return response.data;\n  },\n  async getBankById(id) {\n    const response = await api.get(`/banks/${id}`);\n    return response.data;\n  },\n  async getBankProducts(bankId) {\n    const response = await api.get(`/banks/${bankId}/products`);\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","mockBankService","useMock","bankService","getBanks","response","get","data","getBankById","id","getBankProducts","bankId"],"sources":["C:/Users/carlos.assuncao/tecno_react/src/services/bank.service.js"],"sourcesContent":["import api from './api';\r\nimport { mockBankService } from './mock.service';\r\n\r\n// Use o mock em ambiente de desenvolvimento ou se não houver API configurada\r\nconst useMock = true;\r\n\r\nexport const bankService = useMock ? mockBankService : {\r\n  async getBanks() {\r\n    const response = await api.get('/banks');\r\n    return response.data;\r\n  },\r\n\r\n  async getBankById(id) {\r\n    const response = await api.get(`/banks/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  async getBankProducts(bankId) {\r\n    const response = await api.get(`/banks/${bankId}/products`);\r\n    return response.data;\r\n  },\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,SAASC,eAAe,QAAQ,gBAAgB;;AAEhD;AACA,MAAMC,OAAO,GAAG,IAAI;AAEpB,OAAO,MAAMC,WAAW,GAAGD,OAAO,GAAGD,eAAe,GAAG;EACrD,MAAMG,QAAQA,CAAA,EAAG;IACf,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,WAAWA,CAACC,EAAE,EAAE;IACpB,MAAMJ,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;IAC9C,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMG,eAAeA,CAACC,MAAM,EAAE;IAC5B,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,UAAUK,MAAM,WAAW,CAAC;IAC3D,OAAON,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}